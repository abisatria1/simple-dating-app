// Code generated by mockery v2.14.0. DO NOT EDIT.

package jwt

import mock "github.com/stretchr/testify/mock"

// MockJwtManager is an autogenerated mock type for the JwtManager type
type MockJwtManager struct {
	mock.Mock
}

// GenerateUserJwt provides a mock function with given fields: userID
func (_m *MockJwtManager) GenerateUserJwt(userID int64) (string, error) {
	ret := _m.Called(userID)

	var r0 string
	if rf, ok := ret.Get(0).(func(int64) string); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ParseToken provides a mock function with given fields: jwtToken
func (_m *MockJwtManager) ParseToken(jwtToken string) (*UserClaims, error) {
	ret := _m.Called(jwtToken)

	var r0 *UserClaims
	if rf, ok := ret.Get(0).(func(string) *UserClaims); ok {
		r0 = rf(jwtToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*UserClaims)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(jwtToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockJwtManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockJwtManager creates a new instance of MockJwtManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockJwtManager(t mockConstructorTestingTNewMockJwtManager) *MockJwtManager {
	mock := &MockJwtManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
